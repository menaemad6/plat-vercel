# Generated by Django 4.1.7 on 2023-10-06 18:11

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activity_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100)),
                ('lesson_name', models.CharField(blank=True, max_length=100)),
                ('money', models.IntegerField(blank=True, default='0')),
                ('wallet', models.IntegerField(blank=True, default='0')),
                ('activity_type', models.CharField(blank=True, choices=[('charge', 'Charge'), ('purchase', 'Purchase')], max_length=25)),
                ('purchase_type', models.CharField(blank=True, choices=[('code', 'Code'), ('wallet', 'Wallet')], max_length=25)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('answer_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('question_id', models.CharField(max_length=500)),
                ('assignment_id', models.CharField(max_length=500)),
                ('number', models.IntegerField(blank=True, default=0)),
                ('username', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('answered', models.BooleanField(default=False)),
                ('true', models.BooleanField(default=False)),
                ('answer', models.CharField(blank=True, max_length=100)),
                ('question', models.CharField(blank=True, max_length=100)),
                ('question_true', models.CharField(blank=True, max_length=100)),
                ('answer1', models.CharField(blank=True, max_length=100)),
                ('answer2', models.CharField(blank=True, max_length=100)),
                ('answer3', models.CharField(blank=True, max_length=100)),
                ('answer4', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Assignment Answer',
                'verbose_name_plural': 'Assignment Answers',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('assignment_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('post_id', models.CharField(blank=True, default='none', max_length=500)),
                ('username', models.CharField(max_length=100)),
                ('questions_count', models.IntegerField(default=0)),
                ('assignment_name', models.CharField(blank=True, max_length=100)),
                ('no_of_applicants', models.IntegerField(blank=True, default='0')),
                ('assignment_type', models.CharField(blank=True, choices=[('test', 'Test'), ('homework', 'Homework')], max_length=25)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
            },
        ),
        migrations.CreateModel(
            name='AssignmentOpen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_id', models.CharField(max_length=500)),
                ('username', models.CharField(max_length=100)),
                ('assignment_name', models.CharField(blank=True, max_length=100)),
                ('questions_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Assignment Start',
                'verbose_name_plural': 'Assignment Starts',
            },
        ),
        migrations.CreateModel(
            name='AssignmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_id', models.CharField(max_length=500)),
                ('username', models.CharField(max_length=100)),
                ('assignment_name', models.CharField(blank=True, max_length=100)),
                ('questions_count', models.IntegerField(default=0)),
                ('true_answers', models.IntegerField(default=0)),
                ('false_answers', models.IntegerField(default=0)),
                ('answer1', models.BooleanField(default=False)),
                ('question1', models.CharField(blank=True, max_length=500)),
                ('answer1_answer', models.CharField(blank=True, max_length=500)),
                ('answer2', models.BooleanField(default=False)),
                ('question2', models.CharField(blank=True, max_length=500)),
                ('answer2_answer', models.CharField(blank=True, max_length=500)),
                ('answer3', models.BooleanField(default=False)),
                ('question3', models.CharField(blank=True, max_length=500)),
                ('answer3_answer', models.CharField(blank=True, max_length=500)),
                ('answer4', models.BooleanField(default=False)),
                ('question4', models.CharField(blank=True, max_length=500)),
                ('answer4_answer', models.CharField(blank=True, max_length=500)),
                ('answer5', models.BooleanField(default=False)),
                ('question5', models.CharField(blank=True, max_length=500)),
                ('answer5_answer', models.CharField(blank=True, max_length=500)),
                ('answer6', models.BooleanField(default=False)),
                ('question6', models.CharField(blank=True, max_length=500)),
                ('answer6_answer', models.CharField(blank=True, max_length=500)),
                ('answer7', models.BooleanField(default=False)),
                ('question7', models.CharField(blank=True, max_length=500)),
                ('answer7_answer', models.CharField(blank=True, max_length=500)),
                ('answer8', models.BooleanField(default=False)),
                ('question8', models.CharField(blank=True, max_length=500)),
                ('answer8_answer', models.CharField(blank=True, max_length=500)),
                ('answer9', models.BooleanField(default=False)),
                ('question9', models.CharField(blank=True, max_length=500)),
                ('answer9_answer', models.CharField(blank=True, max_length=500)),
                ('answer10', models.BooleanField(default=False)),
                ('question10', models.CharField(blank=True, max_length=500)),
                ('answer10_answer', models.CharField(blank=True, max_length=500)),
                ('answer11', models.BooleanField(default=False)),
                ('question11', models.CharField(blank=True, max_length=500)),
                ('answer11_answer', models.CharField(blank=True, max_length=500)),
                ('answer12', models.BooleanField(default=False)),
                ('question12', models.CharField(blank=True, max_length=500)),
                ('answer12_answer', models.CharField(blank=True, max_length=500)),
                ('answer13', models.BooleanField(default=False)),
                ('question13', models.CharField(blank=True, max_length=500)),
                ('answer13_answer', models.CharField(blank=True, max_length=500)),
                ('answer14', models.BooleanField(default=False)),
                ('question14', models.CharField(blank=True, max_length=500)),
                ('answer14_answer', models.CharField(blank=True, max_length=500)),
                ('answer15', models.BooleanField(default=False)),
                ('question15', models.CharField(blank=True, max_length=500)),
                ('answer15_answer', models.CharField(blank=True, max_length=500)),
                ('answer16', models.BooleanField(default=False)),
                ('question16', models.CharField(blank=True, max_length=500)),
                ('answer16_answer', models.CharField(blank=True, max_length=500)),
                ('answer17', models.BooleanField(default=False)),
                ('question17', models.CharField(blank=True, max_length=500)),
                ('answer17_answer', models.CharField(blank=True, max_length=500)),
                ('answer18', models.BooleanField(default=False)),
                ('question18', models.CharField(blank=True, max_length=500)),
                ('answer18_answer', models.CharField(blank=True, max_length=500)),
                ('answer19', models.BooleanField(default=False)),
                ('question19', models.CharField(blank=True, max_length=500)),
                ('answer19_answer', models.CharField(blank=True, max_length=500)),
                ('answer20', models.BooleanField(default=False)),
                ('question20', models.CharField(blank=True, max_length=500)),
                ('answer20_answer', models.CharField(blank=True, max_length=500)),
                ('answer21', models.BooleanField(default=False)),
                ('question21', models.CharField(blank=True, max_length=500)),
                ('answer21_answer', models.CharField(blank=True, max_length=500)),
                ('answer22', models.BooleanField(default=False)),
                ('question22', models.CharField(blank=True, max_length=500)),
                ('answer22_answer', models.CharField(blank=True, max_length=500)),
                ('answer23', models.BooleanField(default=False)),
                ('question23', models.CharField(blank=True, max_length=500)),
                ('answer23_answer', models.CharField(blank=True, max_length=500)),
                ('answer24', models.BooleanField(default=False)),
                ('question24', models.CharField(blank=True, max_length=500)),
                ('answer24_answer', models.CharField(blank=True, max_length=500)),
                ('answer25', models.BooleanField(default=False)),
                ('question25', models.CharField(blank=True, max_length=500)),
                ('answer25_answer', models.CharField(blank=True, max_length=500)),
                ('answer26', models.BooleanField(default=False)),
                ('question26', models.CharField(blank=True, max_length=500)),
                ('answer26_answer', models.CharField(blank=True, max_length=500)),
                ('answer27', models.BooleanField(default=False)),
                ('question27', models.CharField(blank=True, max_length=500)),
                ('answer27_answer', models.CharField(blank=True, max_length=500)),
                ('answer28', models.BooleanField(default=False)),
                ('question28', models.CharField(blank=True, max_length=500)),
                ('answer28_answer', models.CharField(blank=True, max_length=500)),
                ('answer29', models.BooleanField(default=False)),
                ('question29', models.CharField(blank=True, max_length=500)),
                ('answer29_answer', models.CharField(blank=True, max_length=500)),
                ('answer30', models.BooleanField(default=False)),
                ('question30', models.CharField(blank=True, max_length=500)),
                ('answer30_answer', models.CharField(blank=True, max_length=500)),
                ('answer31', models.BooleanField(default=False)),
                ('question31', models.CharField(blank=True, max_length=500)),
                ('answer31_answer', models.CharField(blank=True, max_length=500)),
                ('answer32', models.BooleanField(default=False)),
                ('question32', models.CharField(blank=True, max_length=500)),
                ('answer32_answer', models.CharField(blank=True, max_length=500)),
                ('answer33', models.BooleanField(default=False)),
                ('question33', models.CharField(blank=True, max_length=500)),
                ('answer33_answer', models.CharField(blank=True, max_length=500)),
                ('answer34', models.BooleanField(default=False)),
                ('question34', models.CharField(blank=True, max_length=500)),
                ('answer34_answer', models.CharField(blank=True, max_length=500)),
                ('answer35', models.BooleanField(default=False)),
                ('question35', models.CharField(blank=True, max_length=500)),
                ('answer35_answer', models.CharField(blank=True, max_length=500)),
                ('answer36', models.BooleanField(default=False)),
                ('question36', models.CharField(blank=True, max_length=500)),
                ('answer36_answer', models.CharField(blank=True, max_length=500)),
                ('answer37', models.BooleanField(default=False)),
                ('question37', models.CharField(blank=True, max_length=500)),
                ('answer37_answer', models.CharField(blank=True, max_length=500)),
                ('answer38', models.BooleanField(default=False)),
                ('question38', models.CharField(blank=True, max_length=500)),
                ('answer38_answer', models.CharField(blank=True, max_length=500)),
                ('answer39', models.BooleanField(default=False)),
                ('question39', models.CharField(blank=True, max_length=500)),
                ('answer39_answer', models.CharField(blank=True, max_length=500)),
                ('answer40', models.BooleanField(default=False)),
                ('question40', models.CharField(blank=True, max_length=500)),
                ('answer40_answer', models.CharField(blank=True, max_length=500)),
                ('answer41', models.BooleanField(default=False)),
                ('question41', models.CharField(blank=True, max_length=500)),
                ('answer41_answer', models.CharField(blank=True, max_length=500)),
                ('answer42', models.BooleanField(default=False)),
                ('question42', models.CharField(blank=True, max_length=500)),
                ('answer42_answer', models.CharField(blank=True, max_length=500)),
                ('answer43', models.BooleanField(default=False)),
                ('question43', models.CharField(blank=True, max_length=500)),
                ('answer43_answer', models.CharField(blank=True, max_length=500)),
                ('answer44', models.BooleanField(default=False)),
                ('question44', models.CharField(blank=True, max_length=500)),
                ('answer44_answer', models.CharField(blank=True, max_length=500)),
                ('answer45', models.BooleanField(default=False)),
                ('question45', models.CharField(blank=True, max_length=500)),
                ('answer45_answer', models.CharField(blank=True, max_length=500)),
                ('answer46', models.BooleanField(default=False)),
                ('question46', models.CharField(blank=True, max_length=500)),
                ('answer46_answer', models.CharField(blank=True, max_length=500)),
                ('answer47', models.BooleanField(default=False)),
                ('question47', models.CharField(blank=True, max_length=500)),
                ('answer47_answer', models.CharField(blank=True, max_length=500)),
                ('answer48', models.BooleanField(default=False)),
                ('question48', models.CharField(blank=True, max_length=500)),
                ('answer48_answer', models.CharField(blank=True, max_length=500)),
                ('answer49', models.BooleanField(default=False)),
                ('question49', models.CharField(blank=True, max_length=500)),
                ('answer49_answer', models.CharField(blank=True, max_length=500)),
                ('answer50', models.BooleanField(default=False)),
                ('question50', models.CharField(blank=True, max_length=500)),
                ('answer50_answer', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Assignment Submit',
                'verbose_name_plural': 'Assignment Submits',
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_id', models.CharField(max_length=500)),
                ('username', models.CharField(max_length=100)),
                ('assignment_name', models.CharField(blank=True, max_length=100)),
                ('questions_count', models.IntegerField(default=0)),
                ('true_answers', models.IntegerField(default=0)),
                ('false_answers', models.IntegerField(default=0)),
                ('answer1', models.BooleanField(default=False)),
                ('answer2', models.BooleanField(default=False)),
                ('answer3', models.BooleanField(default=False)),
                ('answer4', models.BooleanField(default=False)),
                ('answer5', models.BooleanField(default=False)),
                ('answer6', models.BooleanField(default=False)),
                ('answer7', models.BooleanField(default=False)),
                ('answer8', models.BooleanField(default=False)),
                ('answer9', models.BooleanField(default=False)),
                ('answer10', models.BooleanField(default=False)),
                ('answer11', models.BooleanField(default=False)),
                ('answer12', models.BooleanField(default=False)),
                ('answer13', models.BooleanField(default=False)),
                ('answer14', models.BooleanField(default=False)),
                ('answer15', models.BooleanField(default=False)),
                ('answer16', models.BooleanField(default=False)),
                ('answer17', models.BooleanField(default=False)),
                ('answer18', models.BooleanField(default=False)),
                ('answer19', models.BooleanField(default=False)),
                ('answer20', models.BooleanField(default=False)),
                ('answer21', models.BooleanField(default=False)),
                ('answer22', models.BooleanField(default=False)),
                ('answer23', models.BooleanField(default=False)),
                ('answer24', models.BooleanField(default=False)),
                ('answer25', models.BooleanField(default=False)),
                ('answer26', models.BooleanField(default=False)),
                ('answer27', models.BooleanField(default=False)),
                ('answer28', models.BooleanField(default=False)),
                ('answer29', models.BooleanField(default=False)),
                ('answer30', models.BooleanField(default=False)),
                ('answer31', models.BooleanField(default=False)),
                ('answer32', models.BooleanField(default=False)),
                ('answer33', models.BooleanField(default=False)),
                ('answer34', models.BooleanField(default=False)),
                ('answer35', models.BooleanField(default=False)),
                ('answer36', models.BooleanField(default=False)),
                ('answer37', models.BooleanField(default=False)),
                ('answer38', models.BooleanField(default=False)),
                ('answer39', models.BooleanField(default=False)),
                ('answer40', models.BooleanField(default=False)),
                ('answer41', models.BooleanField(default=False)),
                ('answer42', models.BooleanField(default=False)),
                ('answer43', models.BooleanField(default=False)),
                ('answer44', models.BooleanField(default=False)),
                ('answer45', models.BooleanField(default=False)),
                ('answer46', models.BooleanField(default=False)),
                ('answer47', models.BooleanField(default=False)),
                ('answer48', models.BooleanField(default=False)),
                ('answer49', models.BooleanField(default=False)),
                ('answer50', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Assignment Submit',
                'verbose_name_plural': 'Assignment Submits',
            },
        ),
        migrations.CreateModel(
            name='BuyChapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_id', models.CharField(max_length=500)),
                ('username', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('chapter_title', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(default='blank-profile-picture.png', upload_to='profile_images')),
                ('method', models.CharField(blank=True, choices=[('wallet', 'Wallet'), ('code', 'Code'), ('chapter_code', 'Chapter Code')], default='code', max_length=25)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Chapter Purchase',
                'verbose_name_plural': 'Chapter Purchases',
            },
        ),
        migrations.CreateModel(
            name='BuyLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(max_length=500)),
                ('username', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('lecture_title', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('image', models.ImageField(default='blank-profile-picture.png', upload_to='profile_images')),
                ('method', models.CharField(blank=True, choices=[('wallet', 'Wallet'), ('code', 'Code'), ('lecture_code', 'Lecture Code'), ('chapter', 'Chapter'), ('group', 'Group')], default='code', max_length=25)),
            ],
            options={
                'verbose_name': 'Lecture Purchase',
                'verbose_name_plural': 'Lecture Purchases',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.CharField(blank=True, max_length=100)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('caption', models.TextField(blank=True)),
                ('image', models.ImageField(default='none.jpeg', upload_to='chapter_images')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('no_of_buys', models.IntegerField(default=0)),
                ('no_of_lectures', models.IntegerField(default=0)),
                ('price', models.IntegerField(default=0)),
                ('year', models.CharField(blank=True, choices=[('first', 'First'), ('second', 'Second'), ('third', 'Third')], default='first', max_length=25)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Chapter',
                'verbose_name_plural': 'Chapters',
            },
        ),
        migrations.CreateModel(
            name='ChapterLecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_id', models.CharField(blank=True, max_length=100)),
                ('lecture_id', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(default='none.jpeg', upload_to='post_images')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('teacher_name', models.CharField(blank=True, max_length=100, null=True)),
                ('teacher_img', models.ImageField(blank=True, null=True, upload_to='teacher_images')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_id', models.CharField(blank=True, max_length=8, null=True)),
                ('money', models.IntegerField()),
                ('teacher', models.CharField(blank=True, max_length=100)),
                ('student', models.CharField(blank=True, max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Code',
                'verbose_name_plural': 'Codes',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('post_id', models.CharField(max_length=500)),
                ('commented_to', models.CharField(blank=True, max_length=500)),
                ('comment', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('username', models.CharField(max_length=100)),
                ('username_image', models.ImageField(blank=True, null=True, upload_to='comment_images')),
                ('username_name', models.CharField(blank=True, max_length=100)),
                ('no_of_likes', models.IntegerField(default=0)),
                ('no_of_replys', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='FollowersCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.CharField(max_length=100)),
                ('user', models.CharField(max_length=100)),
                ('follow_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Follow',
                'verbose_name_plural': 'Follows',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.CharField(blank=True, max_length=100)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('code', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, upload_to='group_images')),
                ('no_of_lectures', models.IntegerField(default=0)),
                ('no_of_students', models.IntegerField(default=0)),
                ('year', models.CharField(blank=True, choices=[('first', 'First'), ('second', 'Second'), ('third', 'Third')], default='first', max_length=25)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='GroupLecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(blank=True, max_length=100)),
                ('lecture_id', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(default='none.jpeg', upload_to='post_images')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('teacher_name', models.CharField(blank=True, max_length=100, null=True)),
                ('teacher_img', models.ImageField(blank=True, null=True, upload_to='teacher_images')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Group Lecture',
                'verbose_name_plural': 'Group Lectures',
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.CharField(blank=True, max_length=100)),
                ('group_id', models.CharField(blank=True, max_length=100)),
                ('group_title', models.CharField(blank=True, max_length=100)),
                ('group_image', models.ImageField(blank=True, upload_to='group_images')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(default='blank-profile-picture.png', upload_to='profile_images')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Group Member',
                'verbose_name_plural': 'Group Members',
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=100)),
                ('time', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Information',
                'verbose_name_plural': 'Information ',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_img/', verbose_name='image')),
                ('subject', models.CharField(blank=True, choices=[('arabic', 'Arabic'), ('english', 'English'), ('math', 'Math'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('biology', 'Biology'), ('french', 'French'), ('german', 'German')], default='arabic', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='LikePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(max_length=500)),
                ('username', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100)),
                ('lesson_name', models.CharField(blank=True, max_length=100)),
                ('money', models.IntegerField(blank=True, default='0')),
                ('wallet', models.IntegerField(blank=True, default='0')),
                ('activity_type', models.CharField(blank=True, choices=[('charge', 'Charge'), ('purchase', 'Purchase'), ('withdraw', 'Withdraw'), ('like', 'Like'), ('buy', 'Buy'), ('comment', 'Comment'), ('reply', 'Reply')], max_length=25)),
                ('purchase_type', models.CharField(blank=True, choices=[('code', 'Code'), ('wallet', 'Wallet')], max_length=25)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('liker', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('part_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('lecture_id', models.CharField(max_length=500)),
                ('assignment_id', models.CharField(blank=True, max_length=500)),
                ('teacher', models.CharField(blank=True, max_length=100)),
                ('type', models.CharField(blank=True, choices=[('video', 'Video'), ('link', 'Link'), ('assignment', 'Assignment')], max_length=25)),
                ('place', models.CharField(blank=True, choices=[('video', 'Video'), ('video2', 'Video2'), ('video3', 'Video3'), ('video4', 'Video4'), ('video5', 'Video5'), ('video6', 'Video6'), ('video7', 'Video7'), ('video8', 'Video8'), ('video9', 'Video9'), ('video10', 'Video10'), ('video11', 'Video11'), ('video12', 'Video12'), ('video13', 'Video13'), ('video14', 'Video14'), ('video15', 'Video15'), ('link', 'Link'), ('link2', 'Link2'), ('link3', 'Link3'), ('link4', 'Link4'), ('link5', 'Link5'), ('assignment1', 'Assignment1'), ('assignment2', 'Assignment2'), ('assignment3', 'Assignment3'), ('assignment4', 'Assignment4'), ('assignment5', 'Assignment5')], max_length=25)),
                ('part_number', models.IntegerField(default=1)),
                ('video_url', models.CharField(blank=True, max_length=100)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('video', models.FileField(blank=True, upload_to='lectures')),
                ('link', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.CharField(blank=True, max_length=100)),
                ('video', models.FileField(blank=True, upload_to='lessons')),
                ('image', models.ImageField(default='none.jpeg', upload_to='post_images')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('caption', models.TextField(blank=True)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('no_of_likes', models.IntegerField(default=0)),
                ('no_of_buys', models.IntegerField(default=0)),
                ('no_of_comments', models.IntegerField(default=0)),
                ('price', models.IntegerField(default=0)),
                ('teacher_name', models.CharField(blank=True, max_length=100, null=True)),
                ('teacher_img', models.ImageField(blank=True, null=True, upload_to='teacher_images')),
                ('subject', models.CharField(blank=True, choices=[('arabic', 'Arabic'), ('english', 'English'), ('math', 'Math'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('biology', 'Biology'), ('french', 'French'), ('german', 'German')], default='arabic', max_length=25)),
                ('year', models.CharField(blank=True, choices=[('first', 'First'), ('second', 'Second'), ('third', 'Third')], default='first', max_length=25)),
                ('type', models.CharField(blank=True, choices=[('normal', 'Normal'), ('chapter', 'Chapter'), ('group', 'Group')], default='normal', max_length=25)),
                ('parts_number', models.IntegerField(default=0)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('assignment_id', models.CharField(max_length=500)),
                ('assignment_name', models.CharField(blank=True, max_length=500)),
                ('username', models.CharField(max_length=100)),
                ('number', models.IntegerField(blank=True, default=0)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('question', models.CharField(blank=True, max_length=100)),
                ('true', models.CharField(blank=True, max_length=100)),
                ('answer1', models.CharField(blank=True, max_length=100)),
                ('answer2', models.CharField(blank=True, max_length=100)),
                ('answer3', models.CharField(blank=True, max_length=100)),
                ('answer4', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Assignment Question',
                'verbose_name_plural': 'Assignment Questions',
            },
        ),
        migrations.CreateModel(
            name='RechargeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=500)),
                ('sender_number', models.CharField(blank=True, max_length=100)),
                ('wallet_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Recharge',
                'verbose_name_plural': 'Recharges',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('reply_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('comment_id', models.CharField(max_length=500)),
                ('replyed_to', models.CharField(blank=True, max_length=500)),
                ('comment_text', models.CharField(blank=True, max_length=500)),
                ('reply', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('username', models.CharField(max_length=100)),
                ('username_image', models.ImageField(blank=True, null=True, upload_to='comment_images')),
                ('username_name', models.CharField(blank=True, max_length=100)),
                ('no_of_likes', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Reply',
                'verbose_name_plural': 'Replys',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categorys_img/', verbose_name='image')),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_user', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('school', models.TextField(blank=True)),
                ('image', models.ImageField(default='blank-profile-picture.png', upload_to='profile_images')),
                ('location', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.CharField(blank=True, choices=[('first', 'First'), ('second', 'Second'), ('third', 'Third'), ('none', 'None')], default='none', max_length=25, null=True)),
                ('money', models.IntegerField(default='0')),
                ('no_of_buys', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=True)),
                ('join_date', models.DateTimeField(default=datetime.datetime.now)),
                ('premium', models.BooleanField(default=True)),
                ('instructor', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('code', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(blank=True, choices=[('arabic', 'Arabic'), ('english', 'English'), ('math', 'Math'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('biology', 'Biology'), ('french', 'French'), ('german', 'German'), ('student', 'Student')], default='student', max_length=25, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=40)),
                ('caption', models.TextField(blank=True, max_length=1000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='news/', verbose_name='News Image')),
                ('date', models.DateTimeField(default=datetime.datetime.now, verbose_name='join date')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Video Slug (URL)')),
                ('user', models.ForeignKey(blank=True, default='1', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'New',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='GetPremium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('year', models.CharField(blank=True, choices=[('first', 'First'), ('second', 'Second'), ('third', 'Third')], default='first', max_length=25)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Registration',
                'verbose_name_plural': 'Premium Registrations',
            },
        ),
    ]
